{"remainingRequest":"C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\src\\components\\OSS.vue?vue&type=template&id=9916cd3c&","dependencies":[{"path":"C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\src\\components\\OSS.vue","mtime":1610267171499},{"path":"C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\C59564\\Documents\\Personal\\niharikasharma\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}